(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{78:function(n,a,e){"use strict";e.r(a),e.d(a,"frontMatter",(function(){return u})),e.d(a,"metadata",(function(){return l})),e.d(a,"rightToc",(function(){return s})),e.d(a,"default",(function(){return p}));var i=e(2),t=e(6),r=(e(0),e(96)),u={title:"Pengenalan Fungsi"},l={unversionedId:"fungsi/pengenalan_fungsi",id:"fungsi/pengenalan_fungsi",isDocsHomePage:!1,title:"Pengenalan Fungsi",description:"Pengenalan Fungsi",source:"@site/docs/fungsi/pengenalan_fungsi.mdx",permalink:"/dasprog/fungsi/pengenalan_fungsi",sidebar:"dasprog",previous:{title:"String",permalink:"/dasprog/array_string/string"},next:{title:"Variable Scope",permalink:"/dasprog/fungsi/variable_scope"}},s=[{value:"Pengenalan Fungsi",id:"pengenalan-fungsi",children:[]},{value:"Tujuan Fungsi",id:"tujuan-fungsi",children:[]},{value:"Pendefinisian Fungsi",id:"pendefinisian-fungsi",children:[]},{value:"Prototipe Fungsi",id:"prototipe-fungsi",children:[]},{value:"Parameter Fungsi",id:"parameter-fungsi",children:[{value:"Array Sebagai Parameter",id:"array-sebagai-parameter",children:[]}]},{value:"Pemanggilan Fungsi",id:"pemanggilan-fungsi",children:[]},{value:"Nilai <em>return</em> Fungsi",id:"nilai-return-fungsi",children:[]}],b={rightToc:s};function p(n){var a=n.components,e=Object(t.a)(n,["components"]);return Object(r.b)("wrapper",Object(i.a)({},b,e,{components:a,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"pengenalan-fungsi"},"Pengenalan Fungsi"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Fungsi")," adalah sebuah kumpulan statement untuk melakukan tugas spesifik (tugas tertentu), yang bisa membutuhkan input ataupun tidak, untuk menghasilkan output yang sesuai."),Object(r.b)("p",null,"Secara umum, fungsi dibedakan menjadi dua, yakni Fungsi Standar Library dan Fungsi yang dibuat pengguna. Fungsi Standar Library adalah fungsi bawaan yang telah disertakan dalam library standar, missal fungsi ",Object(r.b)("inlineCode",{parentName:"p"},"printf()"),", ",Object(r.b)("inlineCode",{parentName:"p"},"scanf()")," yang ada di dalam library ",Object(r.b)("inlineCode",{parentName:"p"},"<stdio.h>"),". Sedangkan Fungsi yang dibuat oleh pengguna adalah fungsi yang sengaja dibuat oleh pengguna."),Object(r.b)("h2",{id:"tujuan-fungsi"},"Tujuan Fungsi"),Object(r.b)("p",null,"Tujuan dibuatnya fungsi secara umum adalah untuk membuat program menjadi lebih modular. Fungsi digunakan ketika ingin menjalankan serangkaian perintah secara berulang kali, terkadang dengan input yang berbeda, dengan tujuan tidak mengulang penulisan kode berkali-kali, serta apabila nantinya program mengalami bug, akan mempermudah proses perbaikan."),Object(r.b)("h2",{id:"pendefinisian-fungsi"},"Pendefinisian Fungsi"),Object(r.b)("p",null,"Sebelum fungsi dapat digunakan dan bisa dipanggil, perlu dilakukan pendefinisan terlebih dahulu. Pendefinisian ditujukan untuk mendefinisikan apa yang fungsi tersebut lakukan ketika fungsi tersebut dipanggil. Berikut adalah sintaks untuk melakukan pendefinisan fungsi."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"<return_type> <nama_fungsi>(<parameter1>, <parameter2>, ...)\n{\n    statement;\n    statement;\n    ...\n    ...\n    ...\n}\n")),Object(r.b)("p",null,"Berikut adalah contoh fungsi untuk mencetak string ",Object(r.b)("strong",{parentName:"p"},'"Aku Sebuah Fungsi."'),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-c"}),'void cetak()\n{\n    printf("Aku Sebuah Fungsi\\n");\n}\n\nint main()\n{\n    cetak();\n    return 0;\n}\n')),Object(r.b)("h2",{id:"prototipe-fungsi"},"Prototipe Fungsi"),Object(r.b)("p",null,"Selain menggunakan pendefisian langsung seperti cara sebelumnya, fungsi juga dapat dibuat dengan prototipe. Prototipe Fungsi (atau biasa disebut Interface Fungsi) adalah deklarasi dari sebuah fungsi tanpa definisinya. Deklarasi sebuah fungsi berisi ",Object(r.b)("em",{parentName:"p"},"return type"),", nama fungsi, dan parameter yang terlibat."),Object(r.b)("p",null,"Untuk menuliskan prototipe fungsi, sintaksnya sebagai berikut :"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"// Deklarasi\n<return_type> <nama_fungsi>(<parameter1>, <parameter2>, ...);\n")),Object(r.b)("p",null,"Contoh kode program menggunakan prototipe fungsi."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-c"}),'// Prototipe Fungsi\nvoid cetak();\n\nint main()\n{\n    cetak();\n    return 0;\n}\n\n// Definisi Fungsi cetak()\nvoid cetak()\n{\n    printf("Aku Sebuah Fungsi\\n");\n}\n')),Object(r.b)("h2",{id:"parameter-fungsi"},"Parameter Fungsi"),Object(r.b)("p",null,"Parameter pada fungsi bersifat layaknya input yang diberikan kepada sebuah fungsi. Jumlah parameter pada sebuah fungsi bisa dibuat sebanyak-banyaknya sesuai kebutuhan."),Object(r.b)("p",null,"Penulisan parameter fungsi sama dengan pendefinisian variable dan tiap parameter dipisahkan oleh operator (",Object(r.b)("inlineCode",{parentName:"p"},","),")."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"<tipe_data> <nama_parameter_1> , <tipe_data> <nama_parameter_2>, ...\n")),Object(r.b)("p",null,"Contoh"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-c"}),'void cetak(char str[])\n{\n    printf("%s\\n", str);\n}\n\nvoid jumlah(int a, int b)\n{\n    int hasil = a + b;\n    printf("%d\\n", hasil);\n}\n')),Object(r.b)("h3",{id:"array-sebagai-parameter"},"Array Sebagai Parameter"),Object(r.b)("p",null,"Selain variabel, array juga bisa dijadikan sebagai parameter fungsi dengan menambahkan kurung ",Object(r.b)("inlineCode",{parentName:"p"},"[]"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-c"}),"void maksimumDari(int arr[])\n{\n    // statement\n}\n\nint main()\n{\n    int number[5] = {1, 2, 3, 4, 5};\n    \n    // Pemanggilan Fungsi\n    maksimumDari(number);\n}\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Perilaku array apabila dijadikan parameter fungsi berbeda dengan variabel. Akan dijelaskan pada modul berikutnya.")),Object(r.b)("h2",{id:"pemanggilan-fungsi"},"Pemanggilan Fungsi"),Object(r.b)("p",null,"Untuk memanggil fungsi, dilakukan dengan menulis nama fungsinya diikuti dengan tanda \u201c",Object(r.b)("inlineCode",{parentName:"p"},"()"),"\u201d. Pabila fungsi tersebut memiliki parameter maka didalam tanda \u201c",Object(r.b)("inlineCode",{parentName:"p"},"()"),"\u201d dituliskan nilai/variabel/objek untuk dijadikan yang kita sebut dengan argumen dan dipisahkan tiap argumen dengan operator \u201c",Object(r.b)("inlineCode",{parentName:"p"},","),"\u201d. Argumen-argumen yang dimasukkan harus sesuai dengan tipe data parameter fungsinya."),Object(r.b)("p",null,"Contoh pemanggilan fungsi."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-c"}),'int main()\n{\n    cetak();\n    tambahkan(2,5);\n    cetak("Halo, dunia");\n}\n')),Object(r.b)("h2",{id:"nilai-return-fungsi"},"Nilai ",Object(r.b)("em",{parentName:"h2"},"return")," Fungsi"),Object(r.b)("p",null,"Jika kita menginginkan fungsi yang kita jalankan menghasilkan sebuah nilai atau sederhananya menghasilkan sebuah output,  kita bisa menambahkan keyword ",Object(r.b)("inlineCode",{parentName:"p"},"return")," dan medefinisikan ",Object(r.b)("em",{parentName:"p"},"return type")," dari fungsi tersebut. Fungsi yang memiliki ",Object(r.b)("em",{parentName:"p"},"return type")," bukan void pasti memiliki ",Object(r.b)("em",{parentName:"p"},"return value"),". Nilai yang dikembalikan oleh fungsi tersebut memiliki tipe data yang bersesuaian dengan return type-nya."),Object(r.b)("p",null,"Saat menemui statement ",Object(r.b)("inlineCode",{parentName:"p"},"return")," pada fungsi, maka fungsi tersebut akan berhenti dari titik dimana ",Object(r.b)("inlineCode",{parentName:"p"},"return")," tersebut dieksekusi, kemudian kembali ke bagian kode yang memanggil fungsi tersebut."),Object(r.b)("p",null,"Misal kita ingin mendapatkan hasil dari penjumlahan dua bilangan menggunakan fungsi bernama ",Object(r.b)("inlineCode",{parentName:"p"},"jumlah()"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-c"}),'#include <stdio.h>\n\nint jumlah(int a, int b);\n\nint main()\n{\n    int x = 2, y = 3, hasil;\n    hasil = jumlah(x, y);\n    printf("%d\\n", hasil);\n    return 0;\n}\n\nint jumlah(int a, int b)\n{\n    int hasil = a;\n    hasil += b;\n    return hasil;\n}\n')),Object(r.b)("p",null,"Coba jalankan program di atas, dan lihat outputnya. Kemudian bandingkan dengan program di bawah, ",Object(r.b)("inlineCode",{parentName:"p"},"return")," diletakkan sebelum penjumlahan."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-c"}),'#include <stdio.h>\n\nint jumlah(int a, int b);\n\nint main()\n{\n    int x = 2, y = 3, hasil;\n    hasil = jumlah(x, y);\n    printf("%d\\n", hasil);\n    return 0;\n}\n\nint jumlah(int a, int b)\n{\n    int hasil = a;\n    return hasil; //return here\n    hasil += b;\n    return hasil;\n}\n')))}p.isMDXComponent=!0},96:function(n,a,e){"use strict";e.d(a,"a",(function(){return g})),e.d(a,"b",(function(){return c}));var i=e(0),t=e.n(i);function r(n,a,e){return a in n?Object.defineProperty(n,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[a]=e,n}function u(n,a){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(n,a).enumerable}))),e.push.apply(e,i)}return e}function l(n){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?u(Object(e),!0).forEach((function(a){r(n,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):u(Object(e)).forEach((function(a){Object.defineProperty(n,a,Object.getOwnPropertyDescriptor(e,a))}))}return n}function s(n,a){if(null==n)return{};var e,i,t=function(n,a){if(null==n)return{};var e,i,t={},r=Object.keys(n);for(i=0;i<r.length;i++)e=r[i],a.indexOf(e)>=0||(t[e]=n[e]);return t}(n,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(i=0;i<r.length;i++)e=r[i],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(t[e]=n[e])}return t}var b=t.a.createContext({}),p=function(n){var a=t.a.useContext(b),e=a;return n&&(e="function"==typeof n?n(a):l(l({},a),n)),e},g=function(n){var a=p(n.components);return t.a.createElement(b.Provider,{value:a},n.children)},m={inlineCode:"code",wrapper:function(n){var a=n.children;return t.a.createElement(t.a.Fragment,{},a)}},d=t.a.forwardRef((function(n,a){var e=n.components,i=n.mdxType,r=n.originalType,u=n.parentName,b=s(n,["components","mdxType","originalType","parentName"]),g=p(e),d=i,c=g["".concat(u,".").concat(d)]||g[d]||m[d]||r;return e?t.a.createElement(c,l(l({ref:a},b),{},{components:e})):t.a.createElement(c,l({ref:a},b))}));function c(n,a){var e=arguments,i=a&&a.mdxType;if("string"==typeof n||i){var r=e.length,u=new Array(r);u[0]=d;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=n,l.mdxType="string"==typeof n?n:i,u[1]=l;for(var b=2;b<r;b++)u[b]=e[b];return t.a.createElement.apply(null,u)}return t.a.createElement.apply(null,e)}d.displayName="MDXCreateElement"}}]);